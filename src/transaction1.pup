def transfer = (user1& as collection, user2& as collection, amount as decimal) as boolean
{
        def ret as boolean;
        ret = false;

        transaction(user1, user2)
        {
                user1["balance"] = user1["balance"] - amount;

                if(user1["balance"] < 0)
                {
                        print "insufficient funds",NL;
                        rollback;
                }

                user2["balance"] = user2["balance"] + amount;
                ret = true;
                commit;
        }
        return ret;
}

def build_trans_item = (item& as collection[])
{
        def i as integer;
        for(i = 0; i < 10; i = i + 1)
        {
                item[i] = collection{<"seq_no", i>, <"amount", i*2>};
        }
}

def main = (args as collection) as integer
{
        def trans_list1 as collection[10];
        def trans_list2 as collection[10];

        def result as boolean;

        build_trans_item(trans_list1);
        build_trans_item(trans_list2);

        while(true)
        {
                def a = collection{<"name","Jack">,<"balance",100.00>,<"transaction_list", trans_list1>};
                def b = collection{<"name","Rose">,<"balance",0.00>,<"transaction_list", trans_list2>};

                print a,b,NL;
                result = transfer(a,b,20.00);

                if(result==true)
                {
                        print a,b,NL;
                }
                sleep 1000000;
        }
        return 0;
}

