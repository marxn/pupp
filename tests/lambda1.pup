        def fun_array : function[10, 10];
        def i = 0;
        def j = 0;

        for(i = 0; i < 10; i = i + 1)
        {
            for(j = 0; j < 10; j = j + 1)
            {
                def fun = (x:int, y:int) using(&fun_array)
                {
                    fun_array[x, y] = () using(x, y) : int { return x * y; };
                };

                fun(i, j);
            }
        }

        print fun_array[2, 4](), NL;

        for(i = 0; i < 10; i = i + 1)
        {
            for(j = 0; j < 10; j = j + 1)
            {
                def fun = (&x:int, &y:int) using(&fun_array)
                {
                    fun_array[x, y] = () using(x, y) : int { return x * y; };
                };

                fun(i, j);
            }
        }

        print fun_array[2, 4](), NL;

        for(i = 0; i < 10; i = i + 1)
        {
            for(j = 0; j < 10; j = j + 1)
            {
                def fun = (x:int, y:int) using(&fun_array)
                {
                    fun_array[x, y] = () using(&x, &y) : int { return x * y; };
                };

                fun(i, j);
            }
        }

        print fun_array[2, 4](), NL;

        for(i = 0; i < 10; i = i + 1)
        {
            for(j = 0; j < 10; j = j + 1)
            {
                def fun = (&x:int, &y:int) using(&fun_array)
                {
                    fun_array[x, y] = () using(&x, &y) : int { return x * y; };
                };

                fun(i, j);
            }
        }

        print fun_array[2, 4](), NL;


