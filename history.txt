Jul 6th 2016
------------------------
1. Optimized grammar for CALL statement.
2. Change project name to PUPP.
3. Integrated libgmp source code into project.

Jul 5th 2016
------------------------
1. Fixed a bug in string comparing.
2. Removed symbolic constant: NIL and PI.
3. Support ELSE IF statement.

Jun 20th 2016
------------------------
1. Fixed set type bug.
2. regular test cases.

Jun 15th 2016
------------------------
1. Abandon main() function as the entrance

Jun 12th 2016
------------------------
1. Fixed memory leak in function invoking.

Jun 8th 2016
------------------------
1. Optimazed lambda expr.

May 30th 2016
------------------------
1. Optimized grammar for array and reference.

Feb 20th 2016
------------------------
1. Fixed bugs for closure and lambda expression.

Feb 19th 2016
------------------------
1. Fixed bugs for closure and lambda expression.

Feb 18th 2016
------------------------
1. Rework for closure and lambda expression.

Feb 1st 2016
------------------------
1. Regular the rvalue expression.

May 20th 2015
------------------------
1. Fixed the prototype of function expression.

May 12th 2015
------------------------
1. Implemented Closure and Lambda.
2. Fixed some parsing bugs.

May 10th 2015
------------------------
1. Fixed a memory bug.

May 8th 2015
------------------------
1. Changed function def style to adapt lambda.
2. Changed underlying local-variable memory model to afapt lambda.

April 24th 2015
------------------------
1. Fixed a bug in checking def statement.
2. Support init from a function.

April 1st 2015
------------------------
1. Adjusted precision of decimal value.
2. Adjusted the semanteme of arguments of function.

March 30th 2015
------------------------
1. Implemented array.
2. Removed ANY type from datatype.

March 26th 2015
-------------------------
1. Support give init value in def statement.

March 24th 2015
-------------------------
1. Optimized reference operation.
2. Optimized grammar description.
3. Now you can pass a element of collection to a function by reference.

March 16th 2015
--------------------------
1. Optimized div operation.
2. Support string joining.
3. Checking for break/continue/return/rollback/commit.
4. Default values for variable.
5. Fixed a reference bug.

March 13th 2015
--------------------------
1. Support Decimal data type.
2. Support operations between types.
3. Support data type casting.
4. Support Call statement.

March 6th 2015
---------------------------
1. Support negative number.

March 4th 2015
---------------------------
1. Regular error message.
2. Remove useless code.
3. Fixed a if-else bug.

March 2nd 2015
---------------------------
1. Implemented transaction.
2. Removed useless objects.

March 2nd 2015
---------------------------
1. Implemented reference for function.

Feb 28th 2015
---------------------------
1. Support function which does not return any value.

Feb 27th 2015
---------------------------
1. Fixed a bug from Check() from FunctionExpression.
2. Optimized puppy.y to support empty body of code segment.

Feb 26th 2015
---------------------------
1. Introduced Portal Object to keep track of all global/shared variables.
2. Fixed a double-free bug.

Feb 2nd 2015
---------------------------
1. Fixed a if-else node bug.

Jan 29th 2015
---------------------------
1. Fixed a bug from locating a global variable in inner node.

Jan 28th 2015
---------------------------
1. Make a right way to get the instances of global/local variables.
2. Fixed some bug from function node.

Jan 23rd 2015
---------------------------
1. Fixed some memory leak problem

Jan 22nd 2015
---------------------------
1. Support function
2. Support runtime context.
3. Support runtime error


Jan 6th 2015
---------------------------
1. Support multi-dimension collection as lvalue.
2. fixed a memory leakage.
3. Optimized some grammar
4. Optimized SetValue->toString()


Jan 4th 2015
---------------------------
1. Support Null value.
2. Move those checks in Provision to Runtime.

Dec 30th 2014
---------------------------
1. Support of adding element to collection using Offset style.


Dec 29th 2014
---------------------------
1. Optimize memory allocation mechanism.
2. Regular some naming rule.

Dec 24th 2014
---------------------------
1. Implemented FOR statement.
2. Implemented FOREACH statement.


Dec 19th 2014
---------------------------
1. Implement offset operation.


Dec 16th 2014
---------------------------
1. Fix memory leak problem occures in collection operation.


Dec 13th 2014
---------------------------
1. Collection expression and key-value pair support.
2. fix memory leak problem.


Dec 11th 2014
----------------------------
1. Output error message when transforming a illeagel expression.


Dec 9th 2014
----------------------------
1. Implement Logical expression and test cases.
2. Commenting in scan.l


Dec 8th 2014
----------------------------
1. Support multi expressions in one PRINT statement.
2. Implement symbolic constant in puppy language.
3. Implement ELSE keyword in IF statement.


Dec 5th 2014
----------------------------
1. Add Swipe function to node and expression in order to 
   avoid memory leak during running.
2. Implement a protype of memory pool to manage the life-cycle
   of all the objects.
3. Implement a common base class PuppyObject to handle
   the public operation of any puppy object including most 
   of the gramma factors.
4. New test cases.

